cd "nombre de directorio" te lleva a esa carpeta siempre y cuando estes en la anterior o sea en la que estas en ese momento

ls lista los archivos que estan en la carpeta

cd .. te devuelve al home

pwd te dice donde estas

cat "nombre del archivo a usar" muestra el contenido del archivo


git init sirve para crear el repositorio como tal

git status  visualiza el status del archivo si se ha subido 

git rm  borrar el statu del archivo 

git rm --cached se tiene que volver a usar add

git config: muestra configuraciones de git también podemos usar –list para mostrar la configuración por defecto de nuestro git y si añadimos --show-origin inhales nos muestra las configuraciones guardadas y su ubicación.

git config --global user.name: cambia de manera global el nombre del usuario, seguidamente ponemos entre comillas nuestro nombre.

git config --global user.email: cambia de manera global el email del usuario, seguidamente ponemos entre comillas nuestro nombre.

git log: se usa para ver la historia de nuestros archivos, los commits, el usuario que lo cambió, cuando se realizaron los cambios etc. seguidamente ponemos el nombre de nuestro archivo.


carita feliz :)


cuando se modifica el archivo y quiere volver agregar otro commit
se tiene que volver a usar git add
y despues ya se puede agregar el commit con su comentario

si añado el comando checkout mas el numero del commit del archivo se modifica el archivo
a esa version con dicho contenido
el archivo queda modificado pero se puede volver a la original
usando git checkout master y el nombre del archivo 


git commit -am hace el commit de los cambios
solo funciona con archivo que ya se le habia dado add anteriormente


git branch nombre crea otra rama que el head apuntara al master y la cabecera

git checkout nombre de la rama cambia a esa rama 


